name: CI

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  check-lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black autoflake

      - name: Remove unused imports
        run: |
          # one run to output unused imports, another run for exit code
          autoflake . -r --remove-all-unused-imports
          autoflake . -r --remove-all-unused-imports -c

      - name: black
        run: black . --check

  test:
    runs-on: ${{ matrix.os }}
    needs: check-lint-and-format
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install graphviz libgraphviz-dev pkg-config
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Python package
        run: pip install .

      - name: pytest
        run: pytest tests

  publish:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # after we test that the module works on all systems we only need to build one since this is a pure python module
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install graphviz libgraphviz-dev pkg-config
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Python package
        run: python setup.py bdist_wheel

      - name: Install wheels
        run: pip install dist/*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to PyPI
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
